plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.gms.google-services'
    id 'com.google.android.gms.oss-licenses-plugin'
}

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = project.file("../keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdk 33
    namespace 'com.toast.android.gamebase.sample'
    defaultConfig {
        // TODO: [Fix me] Change to your app's package name.
        applicationId "com.toast.gamebasesample"

        // TODO: [Fix me] Change the minSdkVersion according to your your app's dependencies.
        minSdk 21
        targetSdk 33
        versionCode 13
        versionName GAMEBASE_VERSION

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        // >>> [Weibo IdP]
        ndk {
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        }
        applicationVariants.all { variant ->
            variant.outputs.all {
                // TODO: [Fix me] Change the your app's apk output name.
                outputFileName = "Gamebase-SampleApp-${defaultConfig.versionName}-${variant.buildType.name}.apk"
            }
        }
    }
    signingConfigs {
        config {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.config
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion COMPOSE_COMPILER_VERSION
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation "androidx.multidex:multidex:${MULTIDEX_VERSION}"
    implementation "androidx.core:core-ktx:${CORE_KTX_VERSION}"
    implementation "androidx.compose.ui:ui:${COMPOSE_VERSION}"
    implementation "androidx.compose.material:material:${COMPOSE_VERSION}"
    implementation "androidx.compose.ui:ui-tooling-preview:${COMPOSE_VERSION}"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:${LIFECYCLE_RUNTIME_KTX_VERSION}"
    implementation "androidx.activity:activity-compose:${COMPOSE_ACTIVITY_VERSION}"
    implementation "androidx.navigation:navigation-compose:${COMPOSE_NAVIGATION_VERSION}"
    implementation "androidx.appcompat:appcompat:${APPCOMPAT_VERSION}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:${LIFECYCLE_VIEWMODEL_COMPOSE_VERSION}"
    implementation "com.google.android.gms:play-services-oss-licenses:${OSS_LICENSES_VERSION}"

    // >>> Gamebase - Auth Adapter
    implementation "com.toast.android.gamebase:gamebase-adapter-auth-facebook:${GAMEBASE_VERSION}"
    implementation "com.toast.android.gamebase:gamebase-adapter-auth-google:${GAMEBASE_VERSION}"
    implementation "com.toast.android.gamebase:gamebase-adapter-auth-line:${GAMEBASE_VERSION}"
    implementation "com.toast.android.gamebase:gamebase-adapter-auth-naver:${GAMEBASE_VERSION}"
    implementation "com.toast.android.gamebase:gamebase-adapter-auth-payco:${GAMEBASE_VERSION}"
    implementation "com.toast.android.gamebase:gamebase-adapter-auth-twitter:${GAMEBASE_VERSION}"
    implementation "com.toast.android.gamebase:gamebase-adapter-auth-appleid:${GAMEBASE_VERSION}"
    implementation "com.toast.android.gamebase:gamebase-adapter-auth-kakaogame:${GAMEBASE_VERSION}"

    implementation "com.facebook.android:facebook-login:${FACEBOOK_IDP_VERSION}"

    // >>> [Weibo IdP]
    implementation(files("../weibo_sdk/openDefault-${WEIBO_IDP_VERSION}.aar"))
    implementation "com.toast.android.gamebase:gamebase-adapter-auth-weibo-v4:${GAMEBASE_VERSION}"

    // >>> Gamebase - Purchase Adapter 를 선택하세요
    implementation "com.toast.android.gamebase:gamebase-adapter-purchase-google:${GAMEBASE_VERSION}"

    // >>> [ONE store v17]
//    implementation "com.toast.android.gamebase:gamebase-adapter-purchase-onestore:${GAMEBASE_VERSION}"
    // >>> [ONE store v19]
    // https://github.com/ONE-store/onestore_iap_release/tree/iap19-release/android_app_sample/app/libs
//    implementation files("libs/iap_sdk-${ONE_STORE_V19_VERSION}.aar")
//    implementation "com.toast.android.gamebase:gamebase-adapter-purchase-onestore-v19:${GAMEBASE_VERSION}"
//    implementation "com.toast.android.gamebase:gamebase-adapter-purchase-onestore-v21:${GAMEBASE_VERSION}"
//    implementation "com.toast.android.gamebase:gamebase-adapter-purchase-onestore-external:${GAMEBASE_VERSION}"
//    implementation "com.toast.android.gamebase:gamebase-adapter-purchase-galaxy:${GAMEBASE_VERSION}"
//    implementation "com.toast.android.gamebase:gamebase-adapter-purchase-amazon:${GAMEBASE_VERSION}"
//    implementation "com.toast.android.gamebase:gamebase-adapter-purchase-huawei:${GAMEBASE_VERSION}"
//    implementation "com.toast.android.gamebase:gamebase-adapter-purchase-mycard:${GAMEBASE_VERSION}"

    // >>> Gamebase - Push Adapter
    implementation "com.toast.android.gamebase:gamebase-adapter-push-fcm:${GAMEBASE_VERSION}"

    // >>> 다음 모듈의 사용 방법은 고객 센터로 문의 하시기 바랍니다.
//    implementation "com.toast.android.gamebase:gamebase-adapter-auth-hangame:${GAMEBASE_VERSION}"
//    implementation "com.toast.android.gamebase:gamebase-adapter-auth-hangamejp:${GAMEBASE_VERSION}"
//    implementation "com.toast.android.gamebase:gamebase-adapter-auth-hangamejpemail:${GAMEBASE_VERSION}"
//    implementation "com.toast.android.gamebase:gamebase-adapter-auth-kakaogame:${GAMEBASE_VERSION}"
//    implementation "com.toast.android.gamebase:gamebase-adapter-auth-weibo-v4:${GAMEBASE_VERSION}"
//    implementation "com.toast.android.gamebase:gamebase-adapter-purchase-onestore-v16:${GAMEBASE_VERSION}"

    testImplementation "junit:junit:${JUNIT_VERSION}"
    androidTestImplementation "androidx.test.ext:junit:${EXT_JUNIT_VERSION}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${ESPRESSO_CORE_VERSION}"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:${COMPOSE_VERSION}"
    debugImplementation "androidx.compose.ui:ui-tooling:${COMPOSE_VERSION}"
    debugImplementation "androidx.compose.ui:ui-test-manifest:${COMPOSE_VERSION}"
}
